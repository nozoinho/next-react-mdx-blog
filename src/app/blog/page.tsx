import { allPosts, Post } from "contentlayer/generated";
import PostLists from "@/components/PostLists";
import PostsPagination from "@/components/PostsPagination";
import { getPagination } from "@/utils/pagination";
import NotFound from "../not-found";
//import { Post } from "contentlayer/generated";
//import { getPostsPagination, totalPages } from "@/utils/pagination";

const posts: Post[] = allPosts.sort((a, b) => b.date.localeCompare(a.date));

//const posts: Post[] = allPosts.sort((a, b) => b.date.localeCompare(a.date));
// al colocar el cursor en Post[] se pueden visualizar los datos que contiene post y su tipo validado
//console.log(allPosts[0].title);

// paginacion
/* const totalPosts = posts.length;
const postPerPage = 2;
const totalPages = Math.ceil(totalPosts / postPerPage); */

export const metadata = {
    title: "Lista de todos los posts",
    description: "Description posts - Generated by create next app",
};

const Posts = () => {
    /* const currentPage = 1;
  const offset = (currentPage - 1) * postPerPage; // maneja la posición de elementos que se mostrarán en cada página
  const currentPosts = posts.slice(offset, offset + postPerPage); */
    let arrayCurrentPosts = posts;
    let totalPagesNumber = 1;

    try {
        const { currentPosts, totalPages } = getPagination(posts, posts.length);
        arrayCurrentPosts = currentPosts;
        totalPagesNumber = totalPages;
    } catch (error) {
        NotFound();
    }

    return (
        <div>
            {/* <h1 className="my-4 text-center text-3xl">Post</h1> */}
            <div className="grid gap-4">
                <PostLists posts={arrayCurrentPosts} />
                {totalPagesNumber > 1 && (
                    <PostsPagination
                        totalPages={
                            totalPagesNumber
                        } /* currentPage={currentPage} */
                    />
                )}
            </div>
        </div>
    );
};
export default Posts;
